{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jacob/code/Nexus-Nov/React/app-name/src/Components/Counter/Counter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Counter = props => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  const [alert, setAlert] = useState(false);\n  const [COVIDdata, setCOVIDdata] = useState(0);\n  const y = 'Enter a State(in its initials): ';\n  const link = 'https://api.covidtracking.com/v1/states/daily.json';\n\n  const getData = link => {\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n    axios.get(link, config).then(res => {\n      console.log(res.data);\n      setCOVIDdata(res.data);\n      setAlert(true);\n    });\n  };\n\n  const showAlert = counter => {\n    if (counter === 3) {\n      setAlert(true);\n    }\n  };\n\n  useEffect(() => {\n    console.log('Just Loaded!');\n    getData(link);\n  }, []);\n  /*useEffect(() => {\n      console.log('counter updated! New Value: ', counter)\n      showAlert(counter);\n  }, [counter])*/\n\n  {\n    /*class NameForm extends React.Component {\n       constructor(props) {\n         super(props);\n         this.state = {value: ''};\n         this.handleChange = this.handleChange.bind(this);\n         this.handleSubmit = this.handleSubmit.bind(this);\n       }\n     \n       handleChange(event) {    this.setState({value: event.target.value});  }\n       handleSubmit(event) {\n         alert('A name was submitted: ' + this.state.value);\n         event.preventDefault();\n       }\n     \n       render() {\n         return (\n           <form onSubmit={this.handleSubmit}>\n             <label>\n               Name:\n               <input type=\"text\" value={this.state.value} onChange={this.handleChange} />        </label>\n             <input type=\"submit\" value=\"Submit\" />\n           </form>\n         );\n       }\n     }  */\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: y\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(counter + 1),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), alert ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: COVIDdata[0].date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Counter, \"SdkyVDOLRe1McK3kSuoJ0apmWM8=\");\n\n_c = Counter;\n\nconst UserInput = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"yolo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: props.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: props.state,\n        onChange: props.setState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = UserInput;\nexport default Counter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"UserInput\");","map":{"version":3,"sources":["/home/jacob/code/Nexus-Nov/React/app-name/src/Components/Counter/Counter.js"],"names":["React","useState","useEffect","axios","Counter","props","counter","setCounter","alert","setAlert","COVIDdata","setCOVIDdata","y","link","getData","config","header","get","then","res","console","log","data","showAlert","date","UserInput","onSubmit","state","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,KAAD,CAAlC;AAEA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAD,CAA1C;AAEA,QAAMW,CAAC,GAAG,kCAAV;AAEA,QAAMC,IAAI,GAAG,oDAAb;;AAEA,QAAMC,OAAO,GAAID,IAAD,IAAU;AACtB,UAAME,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE;AACJ,wBAAe;AADX;AADG,KAAf;AAMAb,IAAAA,KAAK,CAACc,GAAN,CAAUJ,IAAV,EAAgBE,MAAhB,EAAwBG,IAAxB,CAA8BC,GAAD,IAAS;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAX,MAAAA,YAAY,CAACQ,GAAG,CAACG,IAAL,CAAZ;AACAb,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,KAJD;AAMH,GAbD;;AAeA,QAAMc,SAAS,GAAIjB,OAAD,IAAa;AAC3B,QAAIA,OAAO,KAAK,CAAhB,EAAmB;AACfG,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,GAJD;;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA;AACJ;AACA;AACA;;AACI;AAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAY;AAER,sBACE;AAAA,4BACE;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,OAAO,EAAE,MAAML,UAAU,CAACD,OAAO,GAAG,CAAX,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EASME,KAAK,gBACD;AAAA,gBAAME,SAAS,CAAC,CAAD,CAAT,CAAac;AAAnB;AAAA;AAAA;AAAA;AAAA,YADC,gBAGD,qCAZV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBH,CApFD;;GAAMpB,O;;KAAAA,O;;AAqFN,MAAMqB,SAAS,GAAGpB,KAAK,IAAI;AACvB,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEA,KAAK,CAACqB,QAAtB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAErB,KAAK,CAACsB,KAAhC;AAAuC,QAAA,QAAQ,EAAEtB,KAAK,CAACuB;AAAvD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXD;;MAAMH,S;AAcN,eAAerB,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport axios from 'axios';\n\n\nconst Counter = (props) => {\n\n    const [counter, setCounter] = useState(0);\n    const [alert, setAlert] = useState(false);\n\n    const [COVIDdata, setCOVIDdata] = useState(0);\n\n    const y = 'Enter a State(in its initials): '; \n\n    const link = 'https://api.covidtracking.com/v1/states/daily.json';\n\n    const getData = (link) => {\n        const config = {\n            header: {\n                'Content-Type':'application/json'\n            }\n        }\n\n        axios.get(link, config).then((res) => {\n            console.log(res.data)\n            setCOVIDdata(res.data);\n            setAlert(true)\n        })\n\n    }\n\n    const showAlert = (counter) => {\n        if (counter === 3) {\n            setAlert(true)\n        }\n    }\n\n    useEffect(() => {\n        console.log('Just Loaded!')\n        getData(link)\n    }, [])\n\n    /*useEffect(() => {\n        console.log('counter updated! New Value: ', counter)\n        showAlert(counter);\n    }, [counter])*/\n    {/*class NameForm extends React.Component {\n        constructor(props) {\n          super(props);\n          this.state = {value: ''};\n          this.handleChange = this.handleChange.bind(this);\n          this.handleSubmit = this.handleSubmit.bind(this);\n        }\n      \n        handleChange(event) {    this.setState({value: event.target.value});  }\n        handleSubmit(event) {\n          alert('A name was submitted: ' + this.state.value);\n          event.preventDefault();\n        }\n      \n        render() {\n          return (\n            <form onSubmit={this.handleSubmit}>\n              <label>\n                Name:\n                <input type=\"text\" value={this.state.value} onChange={this.handleChange} />        </label>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n          );\n        }\n      }  */}\n\n    return (\n      <div>\n        <h1>{y}</h1>\n        {/*<h1>{`my name is ${props.name}`}</h1>*/}\n        {/*<div>{NameForm.render}</div>*/}\n\n        <input />\n        <button onClick={() => setCounter(counter + 1)}>Submit</button>     \n   \n        {\n            alert ? \n                <div>{COVIDdata[0].date}</div>\n            :\n                <></>\n        }\n      </div>\n    )\n}\nconst UserInput = props => {\n    return(\n        <div>\n            <h1>yolo</h1>\n            <form onSubmit={props.onSubmit}>\n                <input type=\"text\" value={props.state} onChange={props.setState}/>\n                <input type=\"submit\" value=\"Submit\"/>\n\n            </form>\n        </div>\n    )\n}; \n \n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}