[{"/home/jacob/code/Nexus-Nov/React/app-name/src/App.js":"1","/home/jacob/code/Nexus-Nov/React/app-name/src/Components/Counter/Counter.js":"2","/home/jacob/code/Nexus-Nov/React/app-name/src/index.js":"3"},{"size":408,"mtime":1606340649248,"results":"4","hashOfConfig":"5"},{"size":4180,"mtime":1606344026658,"results":"6","hashOfConfig":"5"},{"size":178,"mtime":1606291593991,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"leu7i3",{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jacob/code/Nexus-Nov/React/app-name/src/App.js",["15"],"/home/jacob/code/Nexus-Nov/React/app-name/src/Components/Counter/Counter.js",["16","17","18"],"import React, {useState, useEffect} from 'react';\n\nimport axios from 'axios';\n\n\nconst Counter = (props) => {\n\n    const [counter, setCounter] = useState(0);\n    const [alert, setAlert] = useState(false);\n    const [selectedDate, setSelectedDate] = useState(false);\n    const [secondDate, setSecondDate] = useState('')\n    const [dateValue, setDateValue] = useState('');\n\n    const [COVIDdata, setCOVIDdata] = useState(0);\n\n    const y = 'Enter a State(in its initials): '; \n\n    const link = 'https://api.covidtracking.com/v1/us/daily.json';\n\n    const getData = (link) => {\n        const config = {\n            header: {\n                'Content-Type':'application/json'\n            }\n        }\n\n        axios.get(link, config).then((res) => {\n            console.log(res.data)\n            setCOVIDdata(res.data);\n            setAlert(true)\n            console.log('incoming date length: ')\n            {/*checkDate('1',res.data)*/}\n        })\n\n    }\n\n\n    const checkDate = (date, secondDate, covidData) => {\n        console.log('entered function', typeof date, secondDate, covidData)\n\n        const data_from_dates = []\n        covidData.forEach(idx => {\n            if(idx.date >= (date - 1) && idx.date <= secondDate){\n                console.log(idx)\n                data_from_dates.push(idx)\n            }\n        })\n        return data_from_dates;\n    }\n\n    const showAlert = (counter) => {\n        if (counter === 3) {\n            setAlert(true)\n        }\n    }\n\n    useEffect(() => {\n        console.log('Just Loaded!')\n        getData(link)\n    }, [])\n\n    useEffect(() => {\n        console.log('counter updated! New Value: ', counter)\n        showAlert(counter);\n    }, [counter])\n\n    useEffect(() => {\n        console.log('counter updated! New Value: ', dateValue)\n    }, [dateValue])\n\n    useEffect(() => {\n        console.log('counter updated! New Value: ', selectedDate)\n    }, [selectedDate])\n\n    const submit = (e) => {\n        e.preventDefault();\n        let date = e.target.date.value\n        let secondDate = e.target.secondDate.value\n\n        date = date.replace(/-/g,'')\n        secondDate = secondDate.replace(/-/g,'')\n\n\n        date = parseInt(date,10)\n        secondDate = parseInt(secondDate, 10)\n        setDateValue(date);\n        setSecondDate(secondDate);\n        setSelectedDate(checkDate(date, secondDate, COVIDdata))\n    }\n\n    return (\n      <div>\n        <h1>{y}</h1>\n        {/*<h1>{`my name is ${props.name}`}</h1>*/}\n        {/*<div>{NameForm.render}</div>*/}\n        {/* Form for user to input state */}\n        {/*<form onSubmit={props.onSubmit}>\n            <input type=\"text\" value={props.state} onChange={props.setState}/>\n            <input type=\"submit\" value=\"Submit\"/>\n    </form>*/}\n        <div>Enter Date</div>\n        <form onSubmit={submit}>\n            <input name=\"date\" type=\"date\" placeholder=\"date, ex20201125\"/>\n            <input name=\"secondDate\" type=\"date\" placeholder=\"date, ex20201125\"/>         \n            <button type=\"submit\" onClick>yolo</button>\n        </form>\n\n\n        <input />\n        <button onClick={() => setCounter(counter + 1)}>Submit</button>     \n   \n        {\n            alert ? \n                <div>Date: {COVIDdata[0].date}</div>\n            :\n                <></>\n        }\n        {\n            selectedDate ?\n                selectedDate.map((d, i) => {\n                    return (\n                        <div key={i}>\n                            <h1>date: {d.date}</h1>\n                            <p>state: {d.state}</p>\n                            <p>death: {d.death}</p>\n                            <p>death increase: {d.deathIncrease}</p>\n                            <p>pending: {d.pending}</p>\n                        </div>\n                    )\n                })\n                :\n                ''\n        }\n\n      </div>\n    )\n}\n{/*const UserInput = props => {\n    return(\n        <div>\n            <h1>yolo</h1>\n            <form onSubmit={props.onSubmit}>\n                <input type=\"text\" value={props.state} onChange={props.setState}/>\n                <input type=\"submit\" value=\"Submit\"/>\n\n            </form>\n        </div>\n    )\n}; */}\n \n\nexport default Counter;","/home/jacob/code/Nexus-Nov/React/app-name/src/index.js",[],{"ruleId":"19","severity":1,"message":"20","line":1,"column":8,"nodeType":"21","messageId":"22","endLine":1,"endColumn":12},{"ruleId":"19","severity":1,"message":"23","line":11,"column":12,"nodeType":"21","messageId":"22","endLine":11,"endColumn":22},{"ruleId":"24","severity":1,"message":"25","line":32,"column":13,"nodeType":"26","messageId":"27","endLine":32,"endColumn":42},{"ruleId":"24","severity":1,"message":"28","line":138,"column":1,"nodeType":"26","messageId":"29","endLine":149,"endColumn":7},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'secondDate' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Block is redundant.","redundantBlock"]